/* На площадката пред жилищен блок трябва да се поставят плочки. Площадката е с форма на квадрат със страна N метра. Плочките са широки W метра и дълги L метра. На площадката има една пейка с ширина M метра и дължина O метра. Под нея не е нужно да се слагат плочки. Всяка плочка се поставя за 0.2 минути.

Напишете програма, която чете от конзолата размерите на площадката, плочките и пейката и пресмята колко плочки са необходими да се покрие площадката, и пресмята времето за поставяне на всички плочки.

Пример: площадка с размер 20 м. има площ 400 кв.м. Пейка, широка 1 м. и дълга 2 м., заема площ 2 кв.м. Една плочка е широка 5 м. и дълга 4 м. и има площ = 20 кв.м. Площта, която трябва да се покрие, е 400 - 2 = 398 кв.м. Необходими са 398 / 20 = 19.90 плочки. Необходимото време е 19.90 * 0.2 = 3.98 минути.

Входни данни
От конзолата се четат 5 числа:

N – дължината на страна от площадката в интервала [1 … 100].
W – широчината на една плочка в интервала [0.1 … 10.00].
L – дължината на една плочка в интервала [0.1 … 10.00].
М – широчината на пейката в интервала [0 … 10].
О – дължината на пейката в интервала [0 … 10].
Изходни данни
Да се отпечатат на конзолата две числа: броя плочки, необходим за ремонта, и времето за поставяне, всяко на нов ред.
 */


import java.util.Scanner;

public class tilesRepair {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int floorLength = scanner.nextInt();

        double tileWidth = scanner.nextDouble();
        double tileLength = scanner.nextDouble();

        int benchWidth = scanner.nextInt();
        int benchLength = scanner.nextInt();

        int squareFloor = floorLength *floorLength;
        double squareTile = tileWidth * tileLength;
        int squareBench = benchWidth * benchLength;

        double result = (squareFloor - squareBench) / squareTile;

        System.out.println(result);
        System.out.println(result * 0.2);




    }

}
